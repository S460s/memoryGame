{"version":3,"sources":["components/Card.js","components/Header.js","helperFunctions.js","components/WinMsg.js","App.js","index.js"],"names":["Card","props","className","onClick","e","container","target","parentElement","handleClick","element","url","src","alt","Header","moves","bestScore","shuffle","array","i","copy","doubledArray","arr","forEach","item","push","doubleArray","n","length","Math","floor","random","WinMsg","setFlag","prevState","App","cards","useRef","firstCard","secondCard","flipedPairs","useState","setMoves","cardComponents","setCardComponents","playAgain","setPlayAgain","gameOver","setGameOver","setBestScore","imgUrls","card","classList","value","current","console","log","setTimeout","remove","prevMoves","add","useEffect","map","id","uniqid","winMsg","flag","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07edff28.chunk.js","sourcesContent":["import '../styles/card.css';\nconst Card = (props) => {\n\tconst handleClick = (e) => {\n\t\tlet container = e.target.parentElement.parentElement;\n\t\tprops.handleClick({\n\t\t\telement: container,\n\t\t\turl: props.url,\n\t\t});\n\t};\n\treturn (\n\t\t<div className={`flip-card-container`} onClick={handleClick}>\n\t\t\t<div className='flip-card'>\n\t\t\t\t<div className='flip-card-front'>Card</div>\n\t\t\t\t<div className='flip-card-back'>\n\t\t\t\t\t<img className='photo' src={props.url} alt='Random card ' />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Card;\n","import '../styles/header.css';\n\nconst Header = (props) => {\n\treturn (\n\t\t<header>\n\t\t\t<h1 className='title'>Memory Game</h1>\n\t\t\t<div className='scoreboard'>\n\t\t\t\t<p className='score'>Moves: {props.moves}</p>\n\t\t\t\t<p className='score'>High Score: {props.bestScore}</p>\n\t\t\t</div>\n\t\t</header>\n\t);\n};\n\nexport default Header;\n","function doubleArray(arr) {\n\tlet copy = [];\n\tarr.forEach((item) => {\n\t\tfor (let i = 0; i < 2; i++) {\n\t\t\tcopy.push(item);\n\t\t}\n\t});\n\treturn copy;\n}\n\nfunction shuffle(array) {\n\tlet copy = [];\n\tlet doubledArray = doubleArray(array);\n\tlet n = doubledArray.length;\n\tlet i;\n\twhile (n) {\n\t\ti = Math.floor(Math.random() * doubledArray.length);\n\t\tif (i in doubledArray) {\n\t\t\tcopy.push(doubledArray[i]);\n\t\t\tdelete doubledArray[i];\n\t\t\tn--;\n\t\t}\n\t}\n\n\treturn copy;\n}\n\nexport default shuffle;\n","const WinMsg = (props) => {\n\treturn (\n\t\t<div className='winDiv'>\n\t\t\t<p className='winMsg'>Congrats! You won in {props.moves} moves!</p>\n\t\t\t<button\n\t\t\t\tclassName='playAgainBtn'\n\t\t\t\tonClick={() => {\n\t\t\t\t\tprops.setFlag((prevState) => !prevState);\n\t\t\t\t}}>\n\t\t\t\tPlay Again\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default WinMsg;\n","import Card from './components/Card';\nimport Header from './components/Header';\nimport shuffle from './helperFunctions';\nimport uniqid from 'uniqid';\nimport './styles/app.css';\nimport { useEffect, useRef, useState } from 'react';\nimport WinMsg from './components/WinMsg';\nfunction App() {\n\tlet cards = useRef({ firstCard: null, secondCard: null, flipedPairs: 0 });\n\tconst [moves, setMoves] = useState(0);\n\tconst [cardComponents, setCardComponents] = useState([]);\n\tconst [playAgain, setPlayAgain] = useState(false);\n\tconst [gameOver, setGameOver] = useState(false);\n\tconst [bestScore, setBestScore] = useState(null);\n\tlet imgUrls = useRef([\n\t\t'https://picsum.photos/id/121/200/300',\n\t\t'https://picsum.photos/id/112/200/300',\n\t\t'https://picsum.photos/id/132/200/300',\n\t\t'https://picsum.photos/id/123/200/300',\n\t\t'https://picsum.photos/id/324/200/300',\n\t\t'https://picsum.photos/id/524/200/300',\n\t\t'https://picsum.photos/id/824/200/300',\n\t\t'https://picsum.photos/id/24/200/300',\n\t]);\n\n\tconst handleClick = (card) => {\n\t\tif (card.element.classList.value === 'flip-card-container') {\n\t\t\tif (!cards.current.firstCard) {\n\t\t\t\tcards.current.firstCard = card;\n\t\t\t\tcard.element.classList.add('flip');\n\t\t\t} else if (!cards.current.secondCard) {\n\t\t\t\tcards.current.secondCard = card;\n\t\t\t\tif (cards.current.firstCard.url === cards.current.secondCard.url) {\n\t\t\t\t\tcards.current.firstCard = null;\n\t\t\t\t\tcards.current.secondCard = null;\n\t\t\t\t\tcards.current.flipedPairs += 1;\n\t\t\t\t\tconsole.log(cards.current.flipedPairs);\n\t\t\t\t\tconsole.log(imgUrls.current.length);\n\t\t\t\t\tif (cards.current.flipedPairs === imgUrls.current.length) {\n\t\t\t\t\t\tcards.current.flipedPairs = 0;\n\t\t\t\t\t\tconsole.log('GG');\n\t\t\t\t\t\tsetGameOver((prevState) => !prevState);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tcards.current.firstCard.element.classList.remove('flip');\n\t\t\t\t\t\tcards.current.secondCard.element.classList.remove('flip');\n\t\t\t\t\t\tcards.current.firstCard = null;\n\t\t\t\t\t\tcards.current.secondCard = null;\n\t\t\t\t\t}, 1500);\n\t\t\t\t}\n\t\t\t\tsetMoves((prevMoves) => prevMoves + 1);\n\t\t\t\tcard.element.classList.add('flip');\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.log('Already fliped');\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tif (!bestScore || bestScore > moves) {\n\t\t\tsetBestScore(moves);\n\t\t} else {\n\t\t\tsetBestScore(bestScore);\n\t\t}\n\t\tsetMoves(0);\n\t\tsetGameOver(false);\n\t\tsetCardComponents(() => {\n\t\t\tlet components = shuffle(imgUrls.current).map((url) => {\n\t\t\t\tlet id = uniqid();\n\t\t\t\treturn <Card url={url} key={id} handleClick={handleClick} />;\n\t\t\t});\n\t\t\treturn components;\n\t\t});\n\t}, [playAgain]);\n\n\tlet winMsg = gameOver ? (\n\t\t<WinMsg flag={playAgain} setFlag={setPlayAgain} moves={moves} />\n\t) : null;\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Header moves={moves} bestScore={bestScore} />\n\t\t\t{winMsg}\n\t\t\t<div className='gameboard'>{cardComponents}</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}